{"version":3,"names":[],"mappings":"","sources":["index.js"],"sourcesContent":["const regionSelector = document.querySelector('.region__selector')\r\nconst regionList = document.querySelector('.regions__list')\r\nconst regionText = document.querySelector('.filter-text')\r\n\r\nconst themeSwitcher = document.querySelector('.theme-switcher-container')\r\nconst themeText = document.querySelector('#theme_text')\r\nconst moon = document.querySelector('.fa-moon')\r\nconst sun = document.querySelector('.fa-sun')\r\n\r\nconst countriesContainer = document.querySelector('.countries')\r\nconst search = document.querySelector('#search-country')\r\n\r\nconst fetchData = await fetch('https://restcountries.com/v3.1/all')\r\nconst jsonData = await fetchData.json()\r\n\r\nregionSelector.addEventListener('click', () => {\r\n   regionList.classList.toggle('list--invisible')\r\n})\r\nconst formatNum = Intl.NumberFormat(navigator.language)\r\nconst matched = window.matchMedia('(prefers-color-scheme: dark)').matches\r\n\r\nclass App {\r\n   constructor() {\r\n      if (matched) this.switchTheme()\r\n      this.renderCountries(jsonData)\r\n      search.addEventListener('keyup', () => this.sortBySearch())\r\n      search.addEventListener('keydown', this.countriesL)\r\n      countriesContainer.addEventListener('click', (e) => this.setSessionStorage(e))\r\n      themeSwitcher.addEventListener('click', this.switchTheme)\r\n      regionList.addEventListener('click', (e) => {\r\n         if (e.target.classList.contains('region')) {\r\n            this.sortByRegion(e)\r\n            regionList.classList.add('list--invisible')\r\n         }\r\n      })\r\n   }\r\n   renderCountries(countries) {\r\n      countries.forEach(country => {\r\n         const html =\r\n            `<div class=\"country\" data-country=\"${country.name.common}\">\r\n               <a href=\"countryDetails.html\">\r\n                  <div class=\"flag-container\">\r\n                     <img class=\"flag\" src=\"${country.flags.png}\" alt=\"flag_${country.name.common}\">\r\n                  </div>\r\n                  <div class=\"country__details\">\r\n                     <h1>${country.name.common}</h1>\r\n                     <div class=\"population\">\r\n                        <span class=\"text-bold\">Population:</span>\r\n                        <span>${formatNum.format(country.population)}</span>\r\n                     </div>\r\n                     <div class=\"region\">\r\n                        <span class=\"text-bold\">Region:</span>\r\n                        <span>${country.region}</span>\r\n                     </div>\r\n                     <div class=\"capital\">\r\n                        <span class=\"text-bold\">Capital:</span>\r\n                        <span>${country.capital}</span>\r\n                     </div>\r\n                  </div>\r\n               </a>\r\n            </div>`;\r\n         countriesContainer.insertAdjacentHTML('beforeend', html)\r\n      })\r\n   }\r\n   //hm\r\n   sortByRegion(e) {\r\n      const region = e.target.textContent\r\n      regionText.textContent = region\r\n\r\n      countriesContainer.innerHTML = ''\r\n\r\n      const filteredRegion = jsonData.filter(el => el.region === region)\r\n      this.renderCountries(filteredRegion)\r\n   }\r\n   sortBySearch() {\r\n      //Format search bar text\r\n      const lowerCase = search.value.toLowerCase()\r\n      const name = lowerCase.slice(0, 1).toUpperCase() + lowerCase.slice(1)\r\n\r\n      if (name === '') this.renderCountries\r\n\r\n      regionText.textContent = 'Filter by Region'\r\n      countriesContainer.innerHTML = ''\r\n\r\n      const filteredSearch = jsonData.filter(el => el.name.common.match(name))\r\n      this.renderCountries(filteredSearch)\r\n   }\r\n   countriesL() {\r\n      if (window.innerWidth >= 1230)\r\n         setTimeout(() => {\r\n            const countries = document.querySelectorAll('.country')\r\n            if (countries.length === 1) {\r\n               countriesContainer.style.gridTemplateColumns = 'repeat(1, auto)'\r\n            } else {\r\n               countriesContainer.style.gridTemplateColumns = 'repeat(4, auto)'\r\n            }\r\n         }, 100);\r\n   }\r\n   switchTheme() {\r\n      document.body.classList.toggle('dark-mode')\r\n      moon.classList.toggle('invisible')\r\n      sun.classList.toggle('invisible')\r\n\r\n      themeText.textContent =\r\n         `${document.body.classList.contains('dark-mode') ? 'Light Mode' : 'Dark Mode'}`;\r\n   }\r\n   setSessionStorage(e) {\r\n      const country = e.target.closest('.country').dataset.country\r\n      sessionStorage.setItem('country', country)\r\n   }\r\n}\r\nconst app = new App()\r\n"],"file":"index.js"}